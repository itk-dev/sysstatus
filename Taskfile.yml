version: '3'

# https://taskfile.dev/usage/#env-files
dotenv: ['.env.local', '.env']

vars:
  # https://taskfile.dev/reference/templating/
  BASE_URL: '{{.TASK_BASE_URL | default .COMPOSE_SERVER_DOMAIN | default .COMPOSE_DOMAIN | default "https://hoeringsportal.local.itkdev.dk"}}'
  DOCKER_COMPOSE: '{{.TASK_DOCKER_COMPOSE | default "docker compose"}}'

tasks:
  start:
    cmds:
      - task compose -- pull
      - task compose -- up --detach --remove-orphans --wait
      - task composer -- install
      - task console -- doctrine:migrations:migrate --no-interaction
    silent: true

  compose:
    cmds:
      - '{{.DOCKER_COMPOSE}} {{.CLI_ARGS}}'

  composer:
    cmds:
      - task compose -- exec phpfpm composer {{.CLI_ARGS}}
    silent: true

  console:
    cmds:
      - task compose -- exec phpfpm bin/console {{.CLI_ARGS}}
    silent: true

  coding-standards:apply:
    desc: "Apply coding standards"
    cmds:
      - task: coding-standards:assets:apply
      - task: coding-standards:composer:apply
      - task: coding-standards:markdown:apply
      - task: coding-standards:php:apply
      - task: coding-standards:twig:apply
    silent: true

  coding-standards:check:
    desc: "Apply coding standards"
    cmds:
      - task: coding-standards:assets:check
      - task: coding-standards:composer:check
      - task: coding-standards:markdown:check
      - task: coding-standards:php:check
      - task: coding-standards:twig:check
    silent: true

  coding-standards:assets:apply:
    desc: "Apply coding standards for assets"
    cmds:
      - task compose -- run --rm prettier 'assets/' --write

  coding-standards:assets:check:
    desc: "Apply and check coding standards for assets"
    cmds:
      - task: coding-standards:assets:apply
      - task compose -- run --rm prettier 'assets/' --check

  coding-standards:composer:apply:
    desc: "Apply coding standards for Composer"
    cmds:
      - task composer -- normalize

  coding-standards:composer:check:
    desc: "Apply and check coding standards for Composer"
    cmds:
      - task: coding-standards:composer:apply
      - task composer -- audit
      - task composer -- normalize --dry-run
      - task composer -- validate --strict

  coding-standards:markdown:apply:
    desc: "Apply coding standards for Markdown"
    cmds:
      - task compose -- run --rm markdownlint '**/*.md' --fix

  coding-standards:markdown:check:
    desc: "Apply and check coding standards for Markdown"
    cmds:
      - task: coding-standards:markdown:apply
      - task compose -- run --rm markdownlint '**/*.md'

  coding-standards:php:apply:
    desc: "Apply coding standards for PHP"
    cmds:
      - task compose -- exec phpfpm vendor/bin/rector
      - task compose -- exec phpfpm vendor/bin/php-cs-fixer fix
    silent: true

  coding-standards:php:check:
    desc: "Apply and check coding standards for PHP"
    cmds:
      - task: coding-standards:php:apply
      - task compose -- exec phpfpm vendor/bin/rector --dry-run
      - task compose -- exec phpfpm vendor/bin/php-cs-fixer check
    silent: true

  coding-standards:twig:apply:
    desc: "Apply coding standards for Twig"
    cmds:
      - task compose -- exec phpfpm vendor/bin/twig-cs-fixer fix
    silent: true

  coding-standards:twig:check:
    desc: "Apply and check coding standards for Twig"
    cmds:
      - task: coding-standards:twig:apply
      - task compose -- exec phpfpm vendor/bin/twig-cs-fixer check
    silent: true

  code-analysis:
    cmds:
      - task compose -- exec phpfpm vendor/bin/phpstan

  docker-pull:
    desc: "Pull all development docker images"
    cmds:
      - docker pull jauderho/prettier
      - docker pull peterdavehello/markdownlint
      - task compose -- pull

  default:
    cmds:
      - task --list-all
    silent: true
