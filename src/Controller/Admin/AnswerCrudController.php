<?php

namespace App\Controller\Admin;

use App\Entity\Answer;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\ChoiceField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextareaField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use Symfony\Component\HttpFoundation\RedirectResponse;

class AnswerCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Answer::class;
    }

    #[\Override]
    public function updateEntity(EntityManagerInterface $entityManager, mixed $entityInstance): void
    {
        // TODO: Change the autogenerated stub
        parent::updateEntity($entityManager, $entityInstance);

        $url = $this->generateUrl('dashboard', ['entityType' => 'system']);
        $response = new RedirectResponse($url);
        $response->send();
    }

    #[\Override]
    public function configureActions(Actions $actions): Actions
    {
        return $actions

            ->add(Crud::PAGE_EDIT, Action::EDIT)
            ->add(Crud::PAGE_DETAIL, Action::DETAIL)
            ->disable(Action::NEW, Action::DELETE, Action::INDEX)
        ;
    }

    /**
     * @throws \Exception
     */
    #[\Override]
    public function configureFields(string $pageName): iterable
    {
        $question = TextField::new('question')->setFormTypeOptions(['disabled' => true]);
        $smiley = ChoiceField::new('smiley')->setChoices([
            'GREEN' => 'GREEN',
            'RED' => 'RED',
            'BLUE' => 'BLUE',
            'YELLOW' => 'YELLOW',
        ]);
        $note = TextareaField::new('note');
        if (Crud::PAGE_EDIT === $pageName) {
            return [$question, $smiley, $note];
        } elseif (Crud::PAGE_DETAIL === $pageName) {
            return [$question, $smiley, $note];
        } else {
            throw new \Exception('Invalid page: '.$pageName);
        }
    }
}
